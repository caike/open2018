---
- name: Provision Production Server
  hosts: do
  remote_user: deploy
  become: yes
  # replace these vars with reading the defaults/main.yml file
  vars:
    nodejs_version: "8.x"
    npm_config_prefix: "/usr/local/lib/npm"
    npm_config_unsafe_perm: "false"
    nodejs_npm_global_packages: []
    nodejs_package_json_path: ""
    redis_port: 6379
    redis_databases: 1

  tasks:
    - name: Ensure apt-transport-https is installed.
      apt: name=apt-transport-https state=present

    - name: Add Nodesource apt key.
      apt_key:
        url: https://keyserver.ubuntu.com/pks/lookup?op=get&fingerprint=on&search=0x1655A0AB68576280
        id: "68576280"
        state: present

    - name: Add NodeSource repositories for Node.js.
      apt_repository:
        repo: "{{ item }}"
        state: present
      with_items:
        - "deb https://deb.nodesource.com/node_{{ nodejs_version }} {{ ansible_distribution_release }} main"
        - "deb-src https://deb.nodesource.com/node_{{ nodejs_version }} {{ ansible_distribution_release }} main"
      register: node_repo

    - name: Update apt cache if repo was added.
      apt: update_cache=yes
      when: node_repo.changed

    - name: Ensure Node.js and npm are installed.
      apt: "name=nodejs={{ nodejs_version|regex_replace('x', '') }}* state=present"

    - name: Define nodejs_install_npm_user
      set_fact:
        nodejs_install_npm_user: "{{ ansible_user | default(lookup('env', 'USER')) }}"
      when: nodejs_install_npm_user is not defined

    - name: Create npm global directory
      file:
        path: "{{ npm_config_prefix }}"
        owner: "{{ nodejs_install_npm_user }}"
        group: sudo
        state: directory

    - name: Add npm_config_prefix bin directory to global $PATH.
      template:
        src: npm.sh.j2
        dest: /etc/profile.d/npm.sh
        mode: 0644

    - name: Ensure npm global packages are installed.
      npm:
        name: "{{ item.name | default(item) }}"
        version: "{{ item.version | default('latest') }}"
        global: yes
        state: latest
      environment:
        NPM_CONFIG_PREFIX: "{{ npm_config_prefix }}"
        NODE_PATH: "{{ npm_config_prefix }}/lib/node_modules"
        NPM_CONFIG_UNSAFE_PERM: "{{ npm_config_unsafe_perm }}"
      with_items: "{{ nodejs_npm_global_packages }}"

    - name: Install packages defined in a given package.json.
      npm:
        path: "{{ nodejs_package_json_path }}"
      when: nodejs_package_json_path is defined and nodejs_package_json_path

    - name: Install redis
      apt: pkg=redis-server state=latest

    - name: Ensure Redis is started
      service: name=redis-server state=started enabled=yes
